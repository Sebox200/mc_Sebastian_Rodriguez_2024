{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Sebox200/mc_Sebastian_Rodriguez_2024/blob/main/Taller_2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def es_subconjunto(A, U):\n",
        "    return all(elemento in U for elemento in A)\n",
        "\n",
        "def main():\n",
        "\n",
        "    U = set()\n",
        "    cantidad_U = int(input(\"Ingrese la cantidad de elementos del conjunto universal (U): \"))\n",
        "    print(\"Ingrese los elementos del conjunto universal (U):\")\n",
        "    for i in range(cantidad_U):\n",
        "        elemento = input(f\"Ingrese el elemento {i+1}: \")\n",
        "        U.add(elemento)\n",
        "\n",
        "\n",
        "    A = set()\n",
        "    cantidad_A = int(input(\"Ingrese la cantidad de elementos del conjunto A: \"))\n",
        "    print(\"Ingrese los elementos del conjunto A:\")\n",
        "    for i in range(cantidad_A):\n",
        "        elemento = input(f\"Ingrese el elemento {i+1}: \")\n",
        "        A.add(elemento)\n",
        "\n",
        "\n",
        "    if es_subconjunto(A, U):\n",
        "        print(\"A es un subconjunto de U.\")\n",
        "\n",
        "\n",
        "        union_interseccion = (U.union(A)).intersection(A)\n",
        "        print(\"(U ⋃ A) ⋂ A =\", union_interseccion)\n",
        "\n",
        "        diferencia_simetrica = (U.intersection(A)).symmetric_difference(A)\n",
        "        print(\"U ⋂ A ⨁ A =\", diferencia_simetrica)\n",
        "\n",
        "        diferencia_simetrica_2 = (U.difference(A)).symmetric_difference(A)\n",
        "        print(\"U - A ⨁ A =\", diferencia_simetrica_2)\n",
        "    else:\n",
        "        print(\"A NO es un subconjunto de U.\")\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n"
      ],
      "metadata": {
        "id": "tPNDgHVJJVSQ",
        "outputId": "8ed55edc-ed91-4d2f-8494-c706aba5d59d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese la cantidad de elementos del conjunto universal (U): 5\n",
            "Ingrese los elementos del conjunto universal (U):\n",
            "Ingrese el elemento 1: 1\n",
            "Ingrese el elemento 2: 2\n",
            "Ingrese el elemento 3: 3\n",
            "Ingrese el elemento 4: 4\n",
            "Ingrese el elemento 5: 5\n",
            "Ingrese la cantidad de elementos del conjunto A: 4\n",
            "Ingrese los elementos del conjunto A:\n",
            "Ingrese el elemento 1: 5\n",
            "Ingrese el elemento 2: 3\n",
            "Ingrese el elemento 3: 2\n",
            "Ingrese el elemento 4: 5\n",
            "A es un subconjunto de U.\n",
            "(U ⋃ A) ⋂ A = {'3', '2', '5'}\n",
            "U ⋂ A ⨁ A = set()\n",
            "U - A ⨁ A = {'4', '5', '1', '2', '3'}\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "Te damos la bienvenida a Colaboratory",
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}